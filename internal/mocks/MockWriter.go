// Code generated by MockGen. DO NOT EDIT.
// Source: writer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMockWriter is a mock of MockWriter interface.
type MockMockWriter struct {
	ctrl     *gomock.Controller
	recorder *MockMockWriterMockRecorder
}

// MockMockWriterMockRecorder is the mock recorder for MockMockWriter.
type MockMockWriterMockRecorder struct {
	mock *MockMockWriter
}

// NewMockMockWriter creates a new mock instance.
func NewMockMockWriter(ctrl *gomock.Controller) *MockMockWriter {
	mock := &MockMockWriter{ctrl: ctrl}
	mock.recorder = &MockMockWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMockWriter) EXPECT() *MockMockWriterMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MockMockWriter) Write(p []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", p)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write.
func (mr *MockMockWriterMockRecorder) Write(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockMockWriter)(nil).Write), p)
}
